<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABASSURBVHhe7Z15VFRHvsdn5s2bd+admT/mvXPeH+/N8s/MmYnihiBRFBRjxAWRVlAbaGjoBmUV
        BBE1kYAoiRsqouJCcEGjERMnrsQYDfRtZtRxy+o2Cl1NpG+rxIwb+HvnV9BtU9UNtxdA9H7P+Rwv3bf7
        Vn2r61bdXy3+5CeyZMmSJUuWLFmyZMmSJUuWLFmyZMmSJUvWC6VTAD8XTI1+ejNZIJiMhwSRXBZE0iSI
        xGzD14JIDuhE49s60TACP8N+jyw3pReN/QSRlAkiuS+IBJzEpBfJplqT0Zf9XllOSt9EhgoiOSKI5Jkd
        o13A+GldE/FhryOrC50F+HdBNOQJInnCm+o2LYLZuF5XX/9L9rqy7Kj2LvmDYCZn7RjpaS7rTOQv7PVl
        2UhoIt6CSBrtmNct6EVyV28mI9l0yMKaITYMb+8lccZ1M/fldoVRTdPt/xVE8r0ds7qNR60tYEfX2LS9
        cvoSvvyFIJI61rBe4NuapqZfs+l75SSIpMCOOW7joAZwetjawp7/6taSGjP5vSCSh6yZvUhL7d2GwWw6
        XxnpRVJpxxSPYvnlNz99bP3bTq3oSi9/rRFM5DVBJK2sgSdvfAPbqvZCXv7bkBwbDRFjAiD0dd8O4Gv4
        Hp6z/eAH8NnNb7mCcINnr2Qt0ZvJMosJp25dhZLtZaCdGQ7BA/rD+P6vwVR/f4icFglxibmgSV3aAXwt
        UqGk5+C5+JkEZQSUvL+FfpcdkzkstcNSW2zRiWQzm96XXtirqb56BfILlkCI71CYMMALIqdHgTZ7HWSs
        q4YFOy5JInNdNSRkr4Wo6ZEwYUB/+l35hXlQfe1LzmgnMGHvj01znxOGuutMjUF6kayhXVmz8aogErE9
        RP6VIJJqwUQWfX77unrVhmII8fGGyUOHQNzsRZC1qaaD0fO3n4W0dw+Cdv56UCcVWIlLKYSEnFJIWb4P
        5m/7e4fPzNv4BcQl5MIk7yEwZZgPrN64Dmrv1LNmS6LOTEax+eszOkvIfwoiyRREYmQzxnL48llQh4VC
        sFc/UEUlQdbm5wUxb8Mpanhs4tugTimE5PxdMK/08w6m57x/ATKKT8Cct7aDek4+xCS8RT8zf2ud9Rws
        3OioJHqNOMVUOHLlHJeOrjEuYfPZJ6QzN06WGn+q+KSK/nKnjgqE1GX7rQamr/wrqOJzIT79Xcgu03Uo
        AClkb9HTgsraXAtp7x20vp5SuBemjhxFOwI7Dn/EpacLqti8vtDC25NONKyQOlZRunM7TBjoBZHhKmog
        Gpa18QzEaBdD4sJNsKDiAme001RcAG1WMS0Iy2vZZQIop0XTa2/ctZ1LlyN0IrnC5vmF1T6Af8NhUjYT
        jijdWU5vHzGqVKvxSXk76e2GbQc8RdKS9yFt+YG2vysugCo6haZh4+5yLn0OaGLz/cJKEMlaOxmwC94q
        8NepooVxkRoUn/4eJC4o5Uz0NDnl5563URUXIToqGSYO9IJdRz/m0mmHh2y+X0i1txls4u1y5NJZCPXz
        obcpS83Axjpl6R7OvO4ipXAfxKUV0WNsZ5SKKNqmSGnodaLhZJ3ZOAkAfsb68ELoi3u3fiOlJ4XUfH8b
        YsJCQDE6yNpmaDNXd2jMewpsUzRzV9DjrC16UASMpr0vJ7rEepxowfrR66LTb/jE2mXlhmIIHuBFnyXQ
        iKS8HTB78RbOrK7AX7UmYyXMDE+AyMg0SC36kDtHCgnZ66w1E9uW8QP6w5pN67l0d8KPOhOZynrSa8Jq
        K4jkpp2Ecpz47jJ96ItRZ1AD5m04Tbu1rEldUnEBIkIiIG5KKOzaXAJrCt6BCYMGQEJOCX+uBFTxC2gN
        occxabQL/un1r7j0d8JTvZlEsd70ivQiedNOAu2CoYvJPkNpl5NmPi6nw4ObVGYv2gJJs2bB0ydN0Npi
        phz+4H2YOmIEd64U8DnF8sPI3lRLowQFywu49HfBU51Igll/elyCmSy1kziOU7e/o788tXYBzTjesuhz
        hh2DugJDJZVbSqyFgfxwr54GFLO3/o07XwqaeWsgfdVhehyryYHQYT7w+W1pAUkb7uvv1P+J9ahHhZPM
        7CSMY315GQR7edHbFGY6Wj3f5Ye+5PxKSI+cBS1PRWuB6E4egoigcdy5UskpP09vXXiMoRpsS0p3bOPy
        0RXYA2M96hHh2IBOJPmCSB6wibIHhtAxNI4Zzlx/EjQZqzhTnCExLh1ytXFQ/VEl7Nu2ASICRkJ6URV3
        njPEpS6zBjOVYTMgIXImlw9JmA0hrF/dJpyoLJjJZ1wiOuHk9a/bxibmr6eZVScvtbYj7pC8eDPEK7Wg
        iU2D9BWHuPedBWsvPpzisSZzNYzv3w+i3hwLi3Oz4OiV81y+HGP8lPXN46IzzNvaC240ryu27K+k93fL
        7QrjVKwZLwoq7SL6bybetvq/BtUf7YWPK7dBROBI2He6msubA57p7tT/kfXQYzoCV/9DEMlhOxeWBA6p
        4kMXZhQfBvHWwBohBbV2IUwPHOMQVVQK9xlnwdA9jrng8fSAACh7rwBaW+7Cd1fqQDluDODgGZs/e+hF
        ks766DHhJGT2gojtxIDOSImPgajwaJpJfDpOXlrJGSEFtSoNNi7Pg3M1Jzh2l64G1XQV9xlnwfGUtPc+
        psfq8Eh4a46GFgiyq3Q1FK1YRmNeySolTBvhB2GvD4M5ygjYemBvhzzrRLKf9dEj0ouGcVJD6Y5QBo+D
        OE0WzSR2L7EXwxohBVV0KkwaMhhiJk6EY1W7O3R7sZfliQKZW3zUGuDUauaBNiTYWiAN/7wCk4YMhNiJ
        46HmxMdw1/RPuNt0E744fhBU48dCXt4i23x/xXrptgDgp4JILlkuYm96jJQaEuY/HDTJeTST6tl5Lnd3
        8XPYDiUX7IFQPz/43vCNxwvE9paqTcqDmQH+1gJpeWqGDYVv04KwvGbhnngLZo0JoLNd2vPt+TC9ztQw
        ljXXFfBXHZ/eFlnFYVjWBFeYFRwC31zWebxAsNAtadSkL4cpQwdz5jvi9JEDMOd5V/kJ66fTAoDrbA2w
        p64ml7G1BgtEM/ddmsm+VCDauUVOFUjzvXqY4jvUkm+R9ddtCWZyjv21uwJ7y8JILWeEk3RXgWBs7fkt
        awnMDHx+y+qM+huX4cPyjRDqOxQyZmtg55FDt1g/XZalpjxqbWlBQx3VBEdia4inGnVbuqtAMoqP0+lE
        eMw26o44W3McPtxeCvfNt2lbcurwfogcO/pJ2DDvRay3bslTa/lStXF0whpmMqXwA0jO380Z4SzdVSBz
        3iqHtBUf0ePYaUpYkpLAFQDLjpKV3Gv379bDrMCRzeP79fPcPC6dSIitsZ1Ns+yMDg+GZQKdL8Ua4Szd
        VSCOHgxd4cyxg88Uw/3qWF9dlqfaEJwkjWEIDCpiRi3hCXforgKxpA2nrWKaa6sPcUZLxdR4HSYNGvCI
        9dVl6URSzJrrClxwManAOp7uKt1RIDjlND6trTeYkFVM5xVju8AaLRXsdU0a7MEC0TcZx7DmugoNv09r
        C79nrD0B2nnFnCHO0B0FgpFeSwBUpZgJWSolZ7IznDlWBdOGDzvP+uqy2sbLjRdZc12BHaBSuTFAhUOu
        YSP8of7GJWuBnK89QQvJcv93FuyK45AyHmMvEGv00f07OJOlgjUrMijwQbDXXxSsr24JB1tYc13BMoSL
        s9Ax06lFVTB7YRlnTGdgtFcxchSE+AyF0mXvdBgxfPK4Cd7NnQ+TvYeAYlQgJLQ/iEoFZ9PPXfUJPdYk
        5IDCzxd+uNfAGd0V+BlLbCs5JrKG9dMjEkSyhTXYFfLyF0OI92AIHzMWlMETQeHvD7EJiyT/qjHaW7mp
        GP71wGgtCJZH/2qEPZvXQmLyEu7zjsCJDZYxGjwOHuhFG3RbsMZgVBlNryxbx71vYbL3INvo771Td+78
        ivXTbeEeI3qRHGMNdoYz5CZowxWwZkkuPGgmNGM//mCE0qKlMGOCQlKhREelcgY4In6O9BCNSrOQFgQe
        x8amQegwX2enATlEZyZK1k+PiG78YiKl7AWlUrRyOazOW8hVcaRoQRZEx2RAnDoNIoKCIMx/FESFq+kq
        KNY8T5O4YAMk5e+kx5aJcmu3lnLpd4MDrJceFc49cqWhjxw3Fm5++w+uMJBb1y5AqI8PHKosh4c/NsKT
        xyY4+UkVTAsY7ZEwiyMwYoCzH/HYMpVUOyscdE0NXPrd4DLroceFvS/sEtMlaiZyXjCRO2xCcA5vwdI8
        iBgdAOGBI2Hi4IHQ8gQbYb5AHPHXvRUQPSOOM9ITJL+z0/rMYZlsHTbcD459fZE11C1wIxvWvx6T7chi
        4bJ8eGduEtwhV+kT6/VvznGGdwWOxoX4+HBmugsu3rE+B1VchBhVCkwc5AU7jx3iDPUAzaxPPaZjX/7j
        wbzkRFD4vw5hfr52R9akgqNzOEw6efAgmDUlgq4fZI11FowO4JRR65i+awt2nOVr1qce0ZteXr9Tjgtq
        PfrhLlorWIOdZWfJKrj099PQcOMy7CpdQx8EXS6UiguQML+EPvhZFuq4uqTNBXpnTaLCz/fYyU/2P2ON
        dRWcjWj7996tJaCaEc+b3QloOq49iY7N6rBcIXXZXlCMatsJwoVFn85hMsawXvWIQrwHPXj88A5nrKfA
        dggnQGNg0t6yaCSz5DPaWGMIXaXJpWF+280GPLMs2inu6+7X/xfrVY8oxHtw8+NHuDyAN9MTNBmv0QYe
        bzm4wEabvRbUSfl0gjSCx3TxTeFebgm1JzcOcAqzIYf1qccU5udzvPrgnieskZ5i96a1EBnWNuoohW7a
        WkM6ZnKuV3c4DR745z+H+gwxHdpT/gzHAVhDXcXcdIPGr0KGDKIhkdAR/qCcGgExMWkQq11o3VoDj/E1
        ZWgEhI4YQc91ZfMZD1GvM9X/H+tRj+uN/v1/rw6ZdAGnwrCxJVuSZ06nZuelJtJ/Y8e/AbHBb9Bj1Ztj
        O5yL7UZmUgIc0H1ORx5xU5r02RqIDpkIEUGBz7dmCgqE6JBJ9D08pxu2Z5KKHveKZL3pNbXt5ECu20no
        y06zzkRycWI660mvC7t6dhLcxzEIgmj4ALePat9+EMHjKkEk2trGxv9hfXhh1D4nuJbPVJ+l+W+i4Xds
        PvuU6NbgIjHZyVxfo7VHl6h1p3BBvSsrrjzEU0EkW928/jPBRNLYfPVp6c3GJDsZ7W6e6URDPF5fZyJh
        UhemMtwTRMMMNj8vhXQmQ4qbv1RnwJqhtb2+Xmz4rSAat0tMA9aKXX2+zehKepFMc/F/wnEGUTAbJ7DX
        tgg3aMa1f+1r63E7kMfthYT7y+MaysyXviBshbscCCKpsWOk2+hFcvqVMtNTwi4xbtTSvjMpZ6wLfKcT
        jeH4vey1ZDkh3A5QbzbMFMzklAuLSlt1IjmDt0H8Hva7ZbkpvNXQWmMybGgvINwMzbIZ/w+CiVzTieR4
        2+aahhl1zQ3/zX6HLFmyZMmSJUuWLFmyZMmSJUuWLFmyZMmS1fv6f9yD3nj1EcKCAAAAAElFTkSuQmCC
</value>
  </data>
</root>