<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>